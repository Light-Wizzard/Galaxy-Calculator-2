# Galaxy Calculator 2 appveyor configuration files
# https://ci.appveyor.com/tools/validate-yaml
#https://www.appveyor.com/docs/build-environment/#qt
#
version: '{branch}-{build}'

branches:
  only:
    - master

configuration: Release

platform:
  - x64
  - x86

image:
  - Ubuntu2004
  - Visual Studio 2019

stack: python 3.9, python 3.8

for:
-
  matrix:
    only:
      - image: Ubuntu2004
  environment:
    RUNTIME_LINKAGE: static
    COVERITY_BUILD_CANDIDATE: True
    QT5: $HOME/Qt/5.15.2/gcc_64/bin
    QT_IF_VERSION: '3.1.1'
    PRJLIBS: VCRUNTIME140.dll MSVCP140.dll
    BIN: GalaxyCalculator2
    MY_OS: Ubuntu2004
    QIF_PACKAGE_URI: 'packages/com.lightwizzard.galaxycalculator2/data'
    PY_DIR: $HOME/venv3.9
  install:
    - sh: echo install Ubuntu
    - ps: $env:package_version = ("$(git describe --tags --always --long)").trim()
    - ps: Update-AppveyorBuild -Version "$env:package_version-$env:APPVEYOR_BUILD_NUMBER"
    # Python
    - sh: sudo add-apt-repository ppa:deadsnakes/ppa -y
    - sh: sudo apt-get update -qq && sudo apt-get install -qq
    #- sh: sudo apt-get upgrade -qqy
    - sh: sudo apt install -qqy build-essential libssl-dev zlib1g-dev libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev
    - sh: sudo apt install -qqy libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev liblzma-dev tk-dev libffi-dev mesa-common-dev flex bison
    - sh: sudo apt-get install -qqy cmake software-properties-common python3.9-dev python3-venv checkinstall libglu1-mesa-dev freeglut3-dev
  build_script:
    - sh: echo build_script Ubuntu
    #- source $HOME/venv3.9/bin/activate
    #- export PATH=$HOME/venv3.9:$HOME/venv3.9/bin:$HOME/venv3.9/lib:$PATH
    - export PATH=$HOME/Qt/5.15.2/gcc_64/bin:$HOME/Qt/5.15.2/gcc_64/lib:$HOME/Qt/5.15.2/gcc_64/include:$PATH
    - export PATH=/usr/lib/python3.9:/usr/include/python3.9
    - sh: echo $PATH
    - sh: mkdir build
    - cd build
    # if "%platform%"=="x86"
    - sh: qmake -v && qmake ../GalaxyCalculator2.pro CONFIG+=release CONFIG+=debug DESTDIR=. && make
  after_build:
    - sh: echo after_build Ubuntu
    - sh: ls
    - sh: mkdir deploy
    - sh: cp GalaxyCalculator2 deploy/GalaxyCalculator2
    #- sh: linuxdeployqt deploy/GalaxyCalculator2 --verbose=2
    - sh: 7z a -tzip GalaxyCalculator2-Ubuntu2004-$CONFIGURATION-$platform.zip deploy -r
    # Rename it
    - sh: cp GalaxyCalculator2-Ubuntu2004-$CONFIGURATION-$platform.zip ../
    - sh: cp *.zip ../
    - sh: find . -perm /a+x -exec cp {} ../ \;
    - cd ../
    - sh: echo Current Path is %cd%
    - sh: ls
    - sh: echo Completed-Build Ubuntu
  artifacts:
    - path: 'GalaxyCalculator2*.zip'
      name: 'ZipInstaller'
    - path: 'GalaxyCalculator2'
      name: 'ExecutableFile'
-
  matrix:
    only:
      - image: Visual Studio 2019
  environment:
    RUNTIME_LINKAGE: static
    COVERITY_BUILD_CANDIDATE: True
    QT_VERSION: 5.15
    QT5: C:\Qt\5.15.2\mingw81_32
    MINGW: C:\Qt\Tools\mingw810_32
    QT_IF_VERSION: '3.1.1'
    PRJLIBS: VCRUNTIME140.dll MSVCP140.dll
    BIN: GalaxyCalculator2
    MY_OS: Windows
    QIF_PACKAGE_URI: 'packages\com.lightwizzard.galaxycalculator2\data'
    PY_DIR: C:\Python38
  install:
    - ps: write-host "install Windows"
    # Create our AppVeyor version
    - ps: $env:commit = $env:appveyor_repo_commit.SubString(0,7)
    - ps: Update-AppveyorBuild -Version ("{0}-{1}-{2}" -f $env:appveyor_repo_branch,$env:appveyor_build_number,$env:commit )
  before_build:
    - ps: write-host "before_build Windows"
    - cmd: set PATH=%PY_DIR%;%PY_DIR%\Scripts;%PATH%
    - cmd: set PATH=%MINGW%\bin;%QT5%\bin;%PATH%
    - call "%QT5%\bin\qtenv2.bat"
    - if %platform%==x86 call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars32.bat"
    - if %platform%==x64 call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
  build_script:
    - ps: write-host "build_script Windows"
    - cd %APPVEYOR_BUILD_FOLDER%
    - mkdir build
    - cd build
    - if %platform%==x86 qmake -v && qmake ..\%BIN%.pro CONFIG+=%configuration% CONFIG+=c++11 DESTDIR=%cd% && mingw32-make
    - if %platform%==x64 qmake -v && qmake ..\%BIN%.pro CONFIG+=%configuration% CONFIG+=c++11 DESTDIR=%cd% && mingw64-make
  after_build:
    - ps: write-host "after_build Windows"
    - dir
    - mkdir deploy
    - copy "%APPVEYOR_BUILD_FOLDER%\build\%BIN%.exe" "deploy\%BIN%-%MY_OS%-%CONFIGURATION%-%platform%.exe"
    - windeployqt "deploy/%BIN%.exe" --verbose=2
    #- for %%I in (%PRJLIBS%) do copy %PRJLIBDIR%\%%I deploy\
    - 7z a -tzip "%BIN%-%MY_OS%-%CONFIGURATION%-%platform%.zip" deploy -r
    - copy "%APPVEYOR_BUILD_FOLDER%\build\%BIN%-%MY_OS%-%CONFIGURATION%-%platform%.zip" "%APPVEYOR_BUILD_FOLDER%\
    - echo APPVEYOR_BUILD_FOLDER=%APPVEYOR_BUILD_FOLDER%
    #- xcopy /s /e /f "%APPVEYOR_BUILD_FOLDER%\build\deploy" "%APPVEYOR_BUILD_FOLDER%\%QIF_PACKAGE_URI%"
    #- C:\Qt\QtIFW-3.1.1\bin\binarycreator.exe --offline-only -c "%APPVEYOR_BUILD_FOLDER%\config\config.xml" -p "%APPVEYOR_BUILD_FOLDER%\packages" "%BIN%-Windows-Installer.exe"
    #- 7z a -tzip "%BIN%-Windows-Installer.zip" "%BIN%-Windows-Installer.exe"
    - copy *.zip %APPVEYOR_BUILD_FOLDER%
    - copy *.exe %APPVEYOR_BUILD_FOLDER%
    - cd %APPVEYOR_BUILD_FOLDER%
    - echo Current Path is %cd%
    - dir
    - ps: write-host "Completed-Build Windows"
  artifacts:
    - path: '%BIN%*.zip'
      name: 'ZipInstaller'
    - path: '%BIN%*.exe'
      name: 'ExecutableFile'

deploy:
  - provider: GitHub
    release: continuous
    artifact: 'ZipInstaller'
    draft: false
    prerelease: true
    auth_token:
      secure: 5Kb03ANp7s6KeJKren+ROsEnuCk2tXGby36aqYpG0WV8xfHBg26Td9B4C9jpI/O/
  - provider: GitHub
    release: continuous
    artifact: 'ExecutableFile'
    draft: false
    prerelease: true
    auth_token:
      secure: 5Kb03ANp7s6KeJKren+ROsEnuCk2tXGby36aqYpG0WV8xfHBg26Td9B4C9jpI/O/
############################################## End of File ####################

